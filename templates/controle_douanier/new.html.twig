{% extends 'base.html.twig' %}

{% block title %}Nouveau contr√¥le douanier{% endblock %}

{% block body %}
    <div class="container mt-4">
        <h1 class="mb-4">üåç Cr√©er un nouveau contr√¥le douanier</h1>

        <div class="card shadow-sm">
            <div class="card-body">
                {{ form_start(form, {'attr': {'class': 'needs-validation', 'novalidate': 'novalidate', 'id': 'controle-form'}}) }}
                    <div class="row g-3">
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                {{ form_label(form.livraison, null, {'label_attr': {'class': 'form-label fw-bold'}}) }}
                                {{ form_widget(form.livraison, {'attr': {'class': 'form-select', 'required': 'required'}}) }}
                                <div class="invalid-feedback">
                                    {{ form_errors(form.livraison) }}
                                </div>
                            </div>
                            
                            <div class="form-group mb-3">
                                {{ form_label(form.pays_douane, null, {'label_attr': {'class': 'form-label fw-bold'}}) }}
                                <div class="input-group">
                                    {{ form_widget(form.pays_douane, {'attr': {
                                        'class': 'form-control',
                                        'required': 'required',
                                        'id': 'pays-input',
                                        'list': 'pays-list'
                                    }}) }}
                                    <button class="btn btn-outline-secondary" type="button" id="fetch-coordinates">
                                        <i class="fas fa-map-marker-alt"></i> Localiser
                                    </button>
                                </div>
                                <div class="invalid-feedback">
                                    {{ form_errors(form.pays_douane) }}
                                </div>
                                <small class="form-text text-muted">Entrez un pays valide et cliquez sur "Localiser" pour obtenir les coordonn√©es</small>
                            </div>
                            
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group mb-3">
                                       
                                       
                                        <div class="invalid-feedback">
                                            {{ form_errors(form.latitude) }}
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group mb-3">
                                       
                                        <div class="invalid-feedback">
                                            {{ form_errors(form.longitude) }}
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-md-6">
                            <div class="form-group mb-3">
                                {{ form_label(form.statut, null, {'label_attr': {'class': 'form-label fw-bold'}}) }}
                                {{ form_widget(form.statut, {'attr': {'class': 'form-select', 'required': 'required'}}) }}
                                <div class="invalid-feedback">
                                    {{ form_errors(form.statut) }}
                                </div>
                            </div>
                            
                            <div class="form-group mb-3">
                                {{ form_label(form.date_controle, null, {'label_attr': {'class': 'form-label fw-bold'}}) }}
                                {{ form_widget(form.date_controle, {'attr': {'class': 'form-control', 'required': 'required'}}) }}
                                <div class="invalid-feedback">
                                    {{ form_errors(form.date_controle) }}
                                </div>
                            </div>
                            
                            <div class="form-group mb-3">
                                {{ form_label(form.commentaires, null, {'label_attr': {'class': 'form-label fw-bold'}}) }}
                                {{ form_widget(form.commentaires, {'attr': {'class': 'form-control', 'rows': 3}}) }}
                                <div class="invalid-feedback">
                                    {{ form_errors(form.commentaires) }}
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="d-grid gap-2 d-md-flex justify-content-md-end mt-4">
                        <a href="{{ path('app_controle_douanier_index') }}" class="btn btn-outline-secondary me-md-2">
                            <i class="fas fa-arrow-left"></i> Retour
                        </a>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save"></i> Enregistrer
                        </button>
                    </div>
                    
                    {# Rendre invisibles les champs originaux pour √©viter des conflits #}
                    <div style="display: none;">
                        {{ form_widget(form.latitude) }}
                        {{ form_widget(form.longitude) }}
                    </div>
                {{ form_end(form) }}
            </div>
        </div>
    </div>
    
    <datalist id="pays-list">
        {% for pays in ['France', 'Belgique', 'Suisse', 'Allemagne', 'Espagne', 'Italie', 'Royaume-Uni', 'Pays-Bas', 'Luxembourg'] %}
            <option value="{{ pays }}">
        {% endfor %}
    </datalist>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const fetchButton = document.getElementById('fetch-coordinates');
            const paysInput = document.getElementById('pays-input');
            
            // Utiliser les nouveaux champs personnalis√©s pour l'affichage
            const latitudeInput = document.getElementById('controle_douanier_latitude');
            const longitudeInput = document.getElementById('controle_douanier_longitude');
            
            // Champs cach√©s originaux pour le formulaire Symfony
            const latitudeHidden = document.querySelector('input[name="controle_douanier[latitude]"]');
            const longitudeHidden = document.querySelector('input[name="controle_douanier[longitude]"]');
            
            fetchButton.addEventListener('click', function() {
                const pays = paysInput.value.trim();
                
                if (!pays) {
                    alert('Veuillez entrer un pays avant de localiser');
                    return;
                }
                
                fetchButton.disabled = true;
                fetchButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Localisation...';
                
                // Utiliser une API de g√©ocodage
                fetch(`https://nominatim.openstreetmap.org/search?country=${encodeURIComponent(pays)}&format=json&limit=1`)
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Erreur de r√©seau');
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (data && data.length > 0) {
                            const lat = data[0].lat;
                            const lon = data[0].lon;
                            
                            // Mettre √† jour les champs visibles
                            latitudeInput.value = lat;
                            longitudeInput.value = lon;
                            
                            // Synchroniser avec les champs cach√©s originaux si n√©cessaire
                            if (latitudeHidden && latitudeHidden !== latitudeInput) {
                                latitudeHidden.value = lat;
                            }
                            if (longitudeHidden && longitudeHidden !== longitudeInput) {
                                longitudeHidden.value = lon;
                            }
                            
                            console.log("Coordonn√©es d√©finies: Lat=" + lat + ", Long=" + lon);
                        } else {
                            alert('Localisation non trouv√©e pour ' + pays);
                        }
                    })
                    .catch(error => {
                        console.error('Erreur:', error);
                        alert('Erreur lors de la r√©cup√©ration des coordonn√©es');
                    })
                    .finally(() => {
                        fetchButton.disabled = false;
                        fetchButton.innerHTML = '<i class="fas fa-map-marker-alt"></i> Localiser';
                    });
            });
            
            // Validation du formulaire
            const form = document.getElementById('controle-form');
            form.addEventListener('submit', function(event) {
                // Synchroniser les valeurs des champs visibles avec les champs cach√©s avant soumission
                if (latitudeHidden && latitudeHidden !== latitudeInput) {
                    latitudeHidden.value = latitudeInput.value;
                }
                if (longitudeHidden && longitudeHidden !== longitudeInput) {
                    longitudeHidden.value = longitudeInput.value;
                }
                
                if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                
                form.classList.add('was-validated');
            }, false);
        });
    </script>
{% endblock %}